version: "2.3"
services:
  node:
    build:
      context: ./docker/images/node
      dockerfile: Dockerfile
    expose:
      - 3000
    volumes:
      - $PWD:/home/node
      - /etc/localtime:/etc/localtime:ro
    user: root
    working_dir: /home/node
    privileged: true
    restart: "always"
    network_mode: host
    tty: false
    entrypoint: |
      ./scripts/wait-for-it -wait tcp://${PG_HOST:-10.102.0.3}:${PG_PORT:-5432} -wait-retry-interval 5s -timeout 600s
    command: "sh -c 'npm install --production && npm start'"

  postgres:
    image: postgres:11.10
    volumes:
      - ${PG_DIR_DATA:-postgres-storage}:/var/lib/postgresql/data
      - /etc/localtime:/etc/localtime:ro
      - $PWD/storage/database/migrition/:/docker-entrypoint-initdb.d/
    networks:
      main:
        ipv4_address: 10.102.0.3
    restart: "always"

  docker-proxy:
    image: rancher/socat-docker:v0.2.0
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /etc/localtime:/etc/localtime:ro
    privileged: true
    networks:
      main:
        ipv4_address: 10.102.0.4
    restart: "always"

  build-squid-image:
    build:
      context: ./docker/images/squid
      dockerfile: Dockerfile
    image: multi-squid-ipv4-proxy-api:latest
    networks:
      main:
        ipv4_address: 10.102.0.5
    restart: "no"
    command: /bin/sh -c "sleep 1; exit"

volumes:
  postgres-storage:

networks:
  main:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 10.102.0.0/28
          gateway: 10.102.0.1
